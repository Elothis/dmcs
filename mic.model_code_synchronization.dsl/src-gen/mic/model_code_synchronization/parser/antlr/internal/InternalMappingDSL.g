/*
 * generated by Xtext 2.18.0
 */
grammar InternalMappingDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mic.model_code_synchronization.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mic.model_code_synchronization.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mic.model_code_synchronization.services.MappingDSLGrammarAccess;

}

@parser::members {

 	private MappingDSLGrammarAccess grammarAccess;

    public InternalMappingDSLParser(TokenStream input, MappingDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MappingDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"mic.model_code_synchronization.MappingDSL.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getIntegrationMechanismDeclarationParserRuleCall_0());
		}
		this_IntegrationMechanismDeclaration_0=ruleIntegrationMechanismDeclaration
		{
			$current = $this_IntegrationMechanismDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getMappingInstantiationParserRuleCall_1());
		}
		ruleMappingInstantiation
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegrationMechanismDeclaration
entryRuleIntegrationMechanismDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegrationMechanismDeclarationRule()); }
	iv_ruleIntegrationMechanismDeclaration=ruleIntegrationMechanismDeclaration
	{ $current=$iv_ruleIntegrationMechanismDeclaration.current; }
	EOF;

// Rule IntegrationMechanismDeclaration
ruleIntegrationMechanismDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='IM'
							{
								newLeafNode(otherlv_1, grammarAccess.getIntegrationMechanismDeclarationAccess().getIMKeyword_0_0());
							}
							(
								(
									lv_name_2_0=RULE_ID
									{
										newLeafNode(lv_name_2_0, grammarAccess.getIntegrationMechanismDeclarationAccess().getNameIDTerminalRuleCall_0_1_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getIntegrationMechanismDeclarationRule());
										}
										setWithLastConsumed(
											$current,
											"name",
											lv_name_2_0,
											"org.eclipse.xtext.common.Terminals.ID");
									}
								)
							)
							otherlv_3='{'
							{
								newLeafNode(otherlv_3, grammarAccess.getIntegrationMechanismDeclarationAccess().getLeftCurlyBracketKeyword_0_2());
							}
							(
								(
									{
										newCompositeNode(grammarAccess.getIntegrationMechanismDeclarationAccess().getCodestructureCodestructureParserRuleCall_0_3_0());
									}
									lv_codestructure_4_0=ruleCodestructure
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getIntegrationMechanismDeclarationRule());
										}
										set(
											$current,
											"codestructure",
											lv_codestructure_4_0,
											"mic.model_code_synchronization.MappingDSL.Codestructure");
										afterParserOrEnumRuleCall();
									}
								)
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getIntegrationMechanismDeclarationAccess().getModelelementModelElementParserRuleCall_1_0());
								}
								lv_modelelement_5_0=ruleModelElement
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getIntegrationMechanismDeclarationRule());
									}
									set(
										$current,
										"modelelement",
										lv_modelelement_5_0,
										"mic.model_code_synchronization.MappingDSL.ModelElement");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getIntegrationMechanismDeclarationAccess().getConditionConditionParserRuleCall_2_0());
								}
								lv_condition_6_0=ruleCondition
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getIntegrationMechanismDeclarationRule());
									}
									set(
										$current,
										"condition",
										lv_condition_6_0,
										"mic.model_code_synchronization.MappingDSL.Condition");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								(
									{
										newCompositeNode(grammarAccess.getIntegrationMechanismDeclarationAccess().getMappingMappingParserRuleCall_3_0_0());
									}
									lv_mapping_7_0=ruleMapping
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getIntegrationMechanismDeclarationRule());
										}
										set(
											$current,
											"mapping",
											lv_mapping_7_0,
											"mic.model_code_synchronization.MappingDSL.Mapping");
										afterParserOrEnumRuleCall();
									}
								)
							)
							otherlv_8='}'
							{
								newLeafNode(otherlv_8, grammarAccess.getIntegrationMechanismDeclarationAccess().getRightCurlyBracketKeyword_3_1());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getIntegrationMechanismDeclarationAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleCodestructure
entryRuleCodestructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodestructureRule()); }
	iv_ruleCodestructure=ruleCodestructure
	{ $current=$iv_ruleCodestructure.current; }
	EOF;

// Rule Codestructure
ruleCodestructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='codestructure'
		{
			newLeafNode(otherlv_0, grammarAccess.getCodestructureAccess().getCodestructureKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCodestructureAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCodestructureAccess().getCodestructureCodeStructureTypeEnumRuleCall_2_0());
				}
				lv_codestructure_2_0=ruleCodeStructureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodestructureRule());
					}
					set(
						$current,
						"codestructure",
						lv_codestructure_2_0,
						"mic.model_code_synchronization.MappingDSL.CodeStructureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModelElement
entryRuleModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelElementRule()); }
	iv_ruleModelElement=ruleModelElement
	{ $current=$iv_ruleModelElement.current; }
	EOF;

// Rule ModelElement
ruleModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='modelelement'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelElementAccess().getModelelementKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelElementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelElementAccess().getModelelementModelElementTypeEnumRuleCall_2_0());
				}
				lv_modelelement_2_0=ruleModelElementType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelElementRule());
					}
					set(
						$current,
						"modelelement",
						lv_modelelement_2_0,
						"mic.model_code_synchronization.MappingDSL.ModelElementType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='condition'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getColonKeyword_1());
		}
		(
			(
				lv_condition_2_0=RULE_STRING
				{
					newLeafNode(lv_condition_2_0, grammarAccess.getConditionAccess().getConditionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionRule());
					}
					setWithLastConsumed(
						$current,
						"condition",
						lv_condition_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	iv_ruleMapping=ruleMapping
	{ $current=$iv_ruleMapping.current; }
	EOF;

// Rule Mapping
ruleMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='mapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getMappingAccess().getMappingKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMappingAccess().getColonKeyword_1());
		}
		(
			(
				lv_mapping_2_0=RULE_STRING
				{
					newLeafNode(lv_mapping_2_0, grammarAccess.getMappingAccess().getMappingSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingRule());
					}
					setWithLastConsumed(
						$current,
						"mapping",
						lv_mapping_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleMappingInstantiation
entryRuleMappingInstantiation returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMappingInstantiationRule()); }
	iv_ruleMappingInstantiation=ruleMappingInstantiation
	{ $current=$iv_ruleMappingInstantiation.current.getText(); }
	EOF;

// Rule MappingInstantiation
ruleMappingInstantiation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Mapping'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMappingInstantiationAccess().getMappingKeyword_0());
		}
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMappingInstantiationAccess().getLeftCurlyBracketKeyword_1());
		}
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMappingInstantiationAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Rule CodeStructureType
ruleCodeStructureType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='class'
			{
				$current = grammarAccess.getCodeStructureTypeAccess().getCLASSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCodeStructureTypeAccess().getCLASSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='method'
			{
				$current = grammarAccess.getCodeStructureTypeAccess().getMETHODEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCodeStructureTypeAccess().getMETHODEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ModelElementType
ruleModelElementType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='class'
			{
				$current = grammarAccess.getModelElementTypeAccess().getCLASSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getModelElementTypeAccess().getCLASSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='method'
			{
				$current = grammarAccess.getModelElementTypeAccess().getMETHODEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getModelElementTypeAccess().getMETHODEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
