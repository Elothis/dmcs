/**
 * generated by Xtext 2.18.0
 */
package mic.model_code_synchronization.mappingDSL.impl;

import mic.model_code_synchronization.mappingDSL.Codestructure;
import mic.model_code_synchronization.mappingDSL.Condition;
import mic.model_code_synchronization.mappingDSL.IntegrationMechanismDeclaration;
import mic.model_code_synchronization.mappingDSL.Mapping;
import mic.model_code_synchronization.mappingDSL.MappingDSLPackage;
import mic.model_code_synchronization.mappingDSL.ModelElement;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Integration Mechanism Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mic.model_code_synchronization.mappingDSL.impl.IntegrationMechanismDeclarationImpl#getName <em>Name</em>}</li>
 *   <li>{@link mic.model_code_synchronization.mappingDSL.impl.IntegrationMechanismDeclarationImpl#getCodestructure <em>Codestructure</em>}</li>
 *   <li>{@link mic.model_code_synchronization.mappingDSL.impl.IntegrationMechanismDeclarationImpl#getModelelement <em>Modelelement</em>}</li>
 *   <li>{@link mic.model_code_synchronization.mappingDSL.impl.IntegrationMechanismDeclarationImpl#getCondition <em>Condition</em>}</li>
 *   <li>{@link mic.model_code_synchronization.mappingDSL.impl.IntegrationMechanismDeclarationImpl#getMapping <em>Mapping</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IntegrationMechanismDeclarationImpl extends AbstractElementImpl implements IntegrationMechanismDeclaration
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCodestructure() <em>Codestructure</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCodestructure()
   * @generated
   * @ordered
   */
  protected Codestructure codestructure;

  /**
   * The cached value of the '{@link #getModelelement() <em>Modelelement</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModelelement()
   * @generated
   * @ordered
   */
  protected ModelElement modelelement;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected Condition condition;

  /**
   * The cached value of the '{@link #getMapping() <em>Mapping</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMapping()
   * @generated
   * @ordered
   */
  protected Mapping mapping;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntegrationMechanismDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MappingDSLPackage.Literals.INTEGRATION_MECHANISM_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Codestructure getCodestructure()
  {
    return codestructure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCodestructure(Codestructure newCodestructure, NotificationChain msgs)
  {
    Codestructure oldCodestructure = codestructure;
    codestructure = newCodestructure;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE, oldCodestructure, newCodestructure);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCodestructure(Codestructure newCodestructure)
  {
    if (newCodestructure != codestructure)
    {
      NotificationChain msgs = null;
      if (codestructure != null)
        msgs = ((InternalEObject)codestructure).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE, null, msgs);
      if (newCodestructure != null)
        msgs = ((InternalEObject)newCodestructure).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE, null, msgs);
      msgs = basicSetCodestructure(newCodestructure, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE, newCodestructure, newCodestructure));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelElement getModelelement()
  {
    return modelelement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModelelement(ModelElement newModelelement, NotificationChain msgs)
  {
    ModelElement oldModelelement = modelelement;
    modelelement = newModelelement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT, oldModelelement, newModelelement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModelelement(ModelElement newModelelement)
  {
    if (newModelelement != modelelement)
    {
      NotificationChain msgs = null;
      if (modelelement != null)
        msgs = ((InternalEObject)modelelement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT, null, msgs);
      if (newModelelement != null)
        msgs = ((InternalEObject)newModelelement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT, null, msgs);
      msgs = basicSetModelelement(newModelelement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT, newModelelement, newModelelement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCondition(Condition newCondition, NotificationChain msgs)
  {
    Condition oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION, oldCondition, newCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(Condition newCondition)
  {
    if (newCondition != condition)
    {
      NotificationChain msgs = null;
      if (condition != null)
        msgs = ((InternalEObject)condition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION, null, msgs);
      if (newCondition != null)
        msgs = ((InternalEObject)newCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION, null, msgs);
      msgs = basicSetCondition(newCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION, newCondition, newCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mapping getMapping()
  {
    return mapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMapping(Mapping newMapping, NotificationChain msgs)
  {
    Mapping oldMapping = mapping;
    mapping = newMapping;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING, oldMapping, newMapping);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMapping(Mapping newMapping)
  {
    if (newMapping != mapping)
    {
      NotificationChain msgs = null;
      if (mapping != null)
        msgs = ((InternalEObject)mapping).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING, null, msgs);
      if (newMapping != null)
        msgs = ((InternalEObject)newMapping).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING, null, msgs);
      msgs = basicSetMapping(newMapping, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING, newMapping, newMapping));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE:
        return basicSetCodestructure(null, msgs);
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT:
        return basicSetModelelement(null, msgs);
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION:
        return basicSetCondition(null, msgs);
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING:
        return basicSetMapping(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__NAME:
        return getName();
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE:
        return getCodestructure();
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT:
        return getModelelement();
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION:
        return getCondition();
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING:
        return getMapping();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__NAME:
        setName((String)newValue);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE:
        setCodestructure((Codestructure)newValue);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT:
        setModelelement((ModelElement)newValue);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION:
        setCondition((Condition)newValue);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING:
        setMapping((Mapping)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE:
        setCodestructure((Codestructure)null);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT:
        setModelelement((ModelElement)null);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION:
        setCondition((Condition)null);
        return;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING:
        setMapping((Mapping)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE:
        return codestructure != null;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT:
        return modelelement != null;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__CONDITION:
        return condition != null;
      case MappingDSLPackage.INTEGRATION_MECHANISM_DECLARATION__MAPPING:
        return mapping != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //IntegrationMechanismDeclarationImpl
