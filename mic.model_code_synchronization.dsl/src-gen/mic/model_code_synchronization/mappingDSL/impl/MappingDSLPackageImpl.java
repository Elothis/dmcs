/**
 * generated by Xtext 2.18.0
 */
package mic.model_code_synchronization.mappingDSL.impl;

import mic.model_code_synchronization.mappingDSL.AbstractElement;
import mic.model_code_synchronization.mappingDSL.CodeStructureType;
import mic.model_code_synchronization.mappingDSL.Codestructure;
import mic.model_code_synchronization.mappingDSL.Condition;
import mic.model_code_synchronization.mappingDSL.IntegrationMechanismDeclaration;
import mic.model_code_synchronization.mappingDSL.Mapping;
import mic.model_code_synchronization.mappingDSL.MappingDSLFactory;
import mic.model_code_synchronization.mappingDSL.MappingDSLPackage;
import mic.model_code_synchronization.mappingDSL.Model;
import mic.model_code_synchronization.mappingDSL.ModelElement;
import mic.model_code_synchronization.mappingDSL.ModelElementType;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MappingDSLPackageImpl extends EPackageImpl implements MappingDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass abstractElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass integrationMechanismDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass codestructureEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mappingEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum codeStructureTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum modelElementTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see mic.model_code_synchronization.mappingDSL.MappingDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MappingDSLPackageImpl()
  {
    super(eNS_URI, MappingDSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MappingDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MappingDSLPackage init()
  {
    if (isInited) return (MappingDSLPackage)EPackage.Registry.INSTANCE.getEPackage(MappingDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMappingDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MappingDSLPackageImpl theMappingDSLPackage = registeredMappingDSLPackage instanceof MappingDSLPackageImpl ? (MappingDSLPackageImpl)registeredMappingDSLPackage : new MappingDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMappingDSLPackage.createPackageContents();

    // Initialize created meta-data
    theMappingDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMappingDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MappingDSLPackage.eNS_URI, theMappingDSLPackage);
    return theMappingDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Elements()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAbstractElement()
  {
    return abstractElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntegrationMechanismDeclaration()
  {
    return integrationMechanismDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getIntegrationMechanismDeclaration_Name()
  {
    return (EAttribute)integrationMechanismDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrationMechanismDeclaration_Codestructure()
  {
    return (EReference)integrationMechanismDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrationMechanismDeclaration_Modelelement()
  {
    return (EReference)integrationMechanismDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrationMechanismDeclaration_Condition()
  {
    return (EReference)integrationMechanismDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getIntegrationMechanismDeclaration_Mapping()
  {
    return (EReference)integrationMechanismDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCodestructure()
  {
    return codestructureEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCodestructure_Codestructure()
  {
    return (EAttribute)codestructureEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModelElement()
  {
    return modelElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModelElement_Modelelement()
  {
    return (EAttribute)modelElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCondition_Condition()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMapping()
  {
    return mappingEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMapping_Mapping()
  {
    return (EAttribute)mappingEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getCodeStructureType()
  {
    return codeStructureTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getModelElementType()
  {
    return modelElementTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MappingDSLFactory getMappingDSLFactory()
  {
    return (MappingDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__ELEMENTS);

    abstractElementEClass = createEClass(ABSTRACT_ELEMENT);

    integrationMechanismDeclarationEClass = createEClass(INTEGRATION_MECHANISM_DECLARATION);
    createEAttribute(integrationMechanismDeclarationEClass, INTEGRATION_MECHANISM_DECLARATION__NAME);
    createEReference(integrationMechanismDeclarationEClass, INTEGRATION_MECHANISM_DECLARATION__CODESTRUCTURE);
    createEReference(integrationMechanismDeclarationEClass, INTEGRATION_MECHANISM_DECLARATION__MODELELEMENT);
    createEReference(integrationMechanismDeclarationEClass, INTEGRATION_MECHANISM_DECLARATION__CONDITION);
    createEReference(integrationMechanismDeclarationEClass, INTEGRATION_MECHANISM_DECLARATION__MAPPING);

    codestructureEClass = createEClass(CODESTRUCTURE);
    createEAttribute(codestructureEClass, CODESTRUCTURE__CODESTRUCTURE);

    modelElementEClass = createEClass(MODEL_ELEMENT);
    createEAttribute(modelElementEClass, MODEL_ELEMENT__MODELELEMENT);

    conditionEClass = createEClass(CONDITION);
    createEAttribute(conditionEClass, CONDITION__CONDITION);

    mappingEClass = createEClass(MAPPING);
    createEAttribute(mappingEClass, MAPPING__MAPPING);

    // Create enums
    codeStructureTypeEEnum = createEEnum(CODE_STRUCTURE_TYPE);
    modelElementTypeEEnum = createEEnum(MODEL_ELEMENT_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    integrationMechanismDeclarationEClass.getESuperTypes().add(this.getAbstractElement());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Elements(), this.getAbstractElement(), null, "elements", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(abstractElementEClass, AbstractElement.class, "AbstractElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(integrationMechanismDeclarationEClass, IntegrationMechanismDeclaration.class, "IntegrationMechanismDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getIntegrationMechanismDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, IntegrationMechanismDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrationMechanismDeclaration_Codestructure(), this.getCodestructure(), null, "codestructure", null, 0, 1, IntegrationMechanismDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrationMechanismDeclaration_Modelelement(), this.getModelElement(), null, "modelelement", null, 0, 1, IntegrationMechanismDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrationMechanismDeclaration_Condition(), this.getCondition(), null, "condition", null, 0, 1, IntegrationMechanismDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getIntegrationMechanismDeclaration_Mapping(), this.getMapping(), null, "mapping", null, 0, 1, IntegrationMechanismDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(codestructureEClass, Codestructure.class, "Codestructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCodestructure_Codestructure(), this.getCodeStructureType(), "codestructure", null, 0, 1, Codestructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modelElementEClass, ModelElement.class, "ModelElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModelElement_Modelelement(), this.getModelElementType(), "modelelement", null, 0, 1, ModelElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCondition_Condition(), ecorePackage.getEString(), "condition", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mappingEClass, Mapping.class, "Mapping", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMapping_Mapping(), ecorePackage.getEString(), "mapping", null, 0, 1, Mapping.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(codeStructureTypeEEnum, CodeStructureType.class, "CodeStructureType");
    addEEnumLiteral(codeStructureTypeEEnum, CodeStructureType.CLASS);
    addEEnumLiteral(codeStructureTypeEEnum, CodeStructureType.METHOD);

    initEEnum(modelElementTypeEEnum, ModelElementType.class, "ModelElementType");
    addEEnumLiteral(modelElementTypeEEnum, ModelElementType.CLASS);
    addEEnumLiteral(modelElementTypeEEnum, ModelElementType.METHOD);

    // Create resource
    createResource(eNS_URI);
  }

} //MappingDSLPackageImpl
